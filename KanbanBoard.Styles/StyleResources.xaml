<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Border brushes for creating a 3D effect-->
    <LinearGradientBrush x:Key="FlatReverse3DBorderBrush"
                         StartPoint="0.499,1" EndPoint="0.501,0" Opacity="0.7">
        <GradientStop Color="#FFF" Offset="0" />
        <GradientStop Color="#DDD" Offset="0.01" />
        <GradientStop Color="#AAA" Offset="0.99" />
        <GradientStop Color="#888" Offset="1" />
    </LinearGradientBrush>

    <!--Flat button without blue border-->
    <Style x:Key="TransparentRoundFlat3DButton" TargetType="{x:Type Button}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderBrush="{StaticResource FlatReverse3DBorderBrush}" BorderThickness="0" CornerRadius="8" Margin="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#6BB8B8B8"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#6BE6E6E6"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Button.FontWeight" Value="ExtraBold" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="BorderThickness" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransparentRoundFlat3DToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="border" BorderBrush="{StaticResource FlatReverse3DBorderBrush}" BorderThickness="0" CornerRadius="8" Margin="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#6BB8B8B8"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#6BE6E6E6"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Button.FontWeight" Value="ExtraBold" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="BorderThickness" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftHiddenButton" TargetType="{x:Type Button}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <!--Left Bottom Right Top -->
                        <Border Name="borderA" Background="#8BD3D3D3" BorderBrush="{StaticResource FlatReverse3DBorderBrush}" BorderThickness="0" Grid.Column="1"/>
                        <Border Name="borderB" Background="#8BD3D3D3" BorderBrush="{StaticResource FlatReverse3DBorderBrush}" BorderThickness="0" CornerRadius="45 0 0 45"/>
                        <ContentPresenter Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="borderA" Property="BorderThickness" Value="0 3 3 3"/>
                            <Setter TargetName="borderB" Property="BorderThickness" Value="3 3 0 3"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Button.FontWeight" Value="ExtraBold"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="borderA" Property="BorderThickness" Value="0"/>
                            <Setter TargetName="borderB" Property="BorderThickness" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="0:0:0">
                                <SplineThicknessKeyFrame KeyTime="0:0:0" Value="15 0 0 0"/>
                                <SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="0 0 0 0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="0:0:0">
                                <SplineThicknessKeyFrame KeyTime="0:0:0" Value="0 0 0 0"/>
                                <SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="15 0 0 0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RightHiddenButton" TargetType="{x:Type Button}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <!--Left Bottom Right Top -->
                        <Border Name="borderA" Background="#8BD3D3D3" BorderBrush="{StaticResource FlatReverse3DBorderBrush}" BorderThickness="0"/>
                        <Border Name="borderB" Background="#8BD3D3D3" BorderBrush="{StaticResource FlatReverse3DBorderBrush}" BorderThickness="0" CornerRadius="0 45 45 0" Grid.Column="1"/>
                        <ContentPresenter Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="borderA" Property="BorderThickness" Value="3 3 0 3"/>
                            <Setter TargetName="borderB" Property="BorderThickness" Value="0 3 3 3"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Button.FontWeight" Value="ExtraBold"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="borderA" Property="BorderThickness" Value="0"/>
                            <Setter TargetName="borderB" Property="BorderThickness" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="0:0:0">
                                <SplineThicknessKeyFrame KeyTime="0:0:0" Value="0 0 15 0"/>
                                <SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="0 0 0 0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="0:0:0">
                                <SplineThicknessKeyFrame KeyTime="0:0:0" Value="0 0 0 0"/>
                                <SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="0 0 15 0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HiddenTextBox" TargetType="TextBox">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="false">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <TextBlock Text="{TemplateBinding Text}" TextWrapping="Wrap"  Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="HiddenTextBoxWithTrimming" TargetType="TextBox">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="false">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <TextBlock Text="{TemplateBinding Text}" TextWrapping="Wrap" TextTrimming="WordEllipsis" MaxHeight="180"  Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="HiddenComboBox" TargetType="TextBox">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusManager.FocusedElement" Value="{Binding}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="false">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <TextBlock VerticalAlignment="Center" Text="{TemplateBinding Text}"  TextTrimming="CharacterEllipsis" Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <EventTrigger RoutedEvent="Loaded">

            </EventTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>